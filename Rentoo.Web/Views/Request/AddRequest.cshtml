@model Rentoo.Web.ViewModels.RequestViewModel
@{
    ViewData["Title"] = "Add Request";
}
@using RM = Rentoo.Domain.Shared.Localization.Global;


<div class="container mt-5 mb-5">
    <h2 class="text-center mb-4">@RM.Global.ApplicationRequest</h2>

    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-body p-4">
                    <form asp-action="CompleteRequest">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <!-- Hidden Car ID -->
                        <input type="hidden" id="CarId" name="CarId" value="@ViewBag.CarId" />

                        <!-- Start Date -->
                        <div class="form-group mb-3">
                            <label class="form-label fw-bold">@RM.Global.From</label>
                            <input asp-for="StartDate" type="date" class="form-control form-control-lg" id="StartDate" />
                            <span asp-validation-for="StartDate" class="text-danger"></span>
                        </div>

                        <!-- End Date -->
                        <div class="form-group mb-3">
                            <label class="form-label fw-bold">@RM.Global.To</label>
                            <input asp-for="EndDate" type="date" class="form-control form-control-lg" id="EndDate" />
                            <span asp-validation-for="EndDate" class="text-danger"></span>
                        </div>

                        <!-- Delivery Address -->
                        <div class="form-group mb-3">
                            <label class="form-label fw-bold">@RM.Global.DeliveryAddress</label>
                            <input asp-for="DeliveryAddress" class="form-control form-control-lg" placeholder="Enter delivery address" />
                            <span asp-validation-for="DeliveryAddress" class="text-danger"></span>
                        </div>

                        <!-- Pickup Address -->
                        <div class="form-group mb-3">
                            <label class="form-label fw-bold">@RM.Global.pickupAddress</label>
                            <input asp-for="pickupAddress" class="form-control form-control-lg" placeholder="Enter pickup address" />
                            <span asp-validation-for="pickupAddress" class="text-danger"></span>
                        </div>

                        <!-- With Driver -->
                        <div class="form-group form-check mb-3">
                            <input class="form-check-input" asp-for="WithDriver" id="WithDriver" />
                            <label class="form-label fw-bold">@RM.Global.WithDriver</label>
                        </div>

                        <hr class="my-4" />

                        <!-- Total Price Display -->
                        <div class="d-flex justify-content-between align-items-center bg-light p-3 rounded mb-4">
                            <span class="fw-bold fs-5">Total Price:</span>
                            <span id="totalPrice" class="text-success fw-bold fs-5">Loading...</span>
                            <input asp-for="TotalPrice" id="inpTotPri"  hidden/>
                        </div>

                        <!-- Submit -->
                        <div class="form-group">
                            <input type="submit" value="Continue to Payment" class="btn btn-primary btn-lg w-100" />
                        </div>

                        <div class="text-center mt-3">
                            <a asp-action="Index" class="text-decoration-none">Back to Listings</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!--
What is Ajax ?
    Set of Technologies
    1- XMLHTTPRequest
    2- DOM
    3- CSS
    With using AJAX I Can Make Partial Request in the page
-->

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const today = new Date().toISOString().split('T')[0];
            const startDateInput = document.getElementById("StartDate");
            const endDateInput = document.getElementById("EndDate");
            const carIdInput = document.getElementById("CarId");
			const withDriverInput = document.getElementById("WithDriver");

            // Set min for start date and end date
            startDateInput.setAttribute("min", today);
            endDateInput.setAttribute("min", today);

            // When StartDate changes, update min of EndDate
            startDateInput.addEventListener("change", function () {
                const startDateValue = startDateInput.value;
                endDateInput.setAttribute("min", startDateValue);

                // Clear end date if it's earlier than start date
                if (endDateInput.value < startDateValue) {
                    endDateInput.value = "";
                }

                calculateTotalPrice();
            });

            // Calculate price when end date changes
            endDateInput.addEventListener("change", function() {
                calculateTotalPrice();
            });

			// Calculate price when WithDriver checkbox changes
			withDriverInput.addEventListener("change", function() {
				calculateTotalPrice();
		    });

            // Calculate total price using server-side API
            function calculateTotalPrice() {
                const startDate = startDateInput.value;
                const endDate = endDateInput.value;
                const carId = carIdInput.value;
				const withDriver = document.getElementById("WithDriver").checked;

                if (startDate && endDate && carId) {
                    // Display loading state
                    document.getElementById("totalPrice").textContent = "Calculating...";

                    // Call the server API to get the price
                    fetch(`/Request/GetTotalPrice?startDate=${startDate}&endDate=${endDate}&carId=${carId}&WithDriver=${withDriver}`)
                                .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Format price with currency symbol
                                const formattedPrice = new Intl.NumberFormat('en-US', {
                                    style: 'currency',
                                    currency: 'USD'
                                }).format(data.totalPrice);

								document.getElementById("inpTotPri").value = data.totalPrice;
                                document.getElementById("totalPrice").textContent = formattedPrice;
                            } else {
                                document.getElementById("totalPrice").textContent = "Error calculating price111";
                                console.error(data.message);
                            }
                        })
                        .catch(error => {
                            document.getElementById("totalPrice").textContent = "Error calculating pricesssss";
                            console.error("Error fetching price:", error);
                        });
                } else {
                    document.getElementById("totalPrice").textContent = "Please select dates";
                }
            }

            if (startDateInput.value && endDateInput.value) {
                calculateTotalPrice();
            }
        });
    </script>
}   