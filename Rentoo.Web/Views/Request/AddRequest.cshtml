@model Rentoo.Web.ViewModels.RequestViewModel
@{
    ViewData["Title"] = "Add Request";
}

<div class="container mt-5 mb-5">
    <h2 class="text-center mb-4">Request Rental</h2>

    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-body p-4">
                    <form asp-action="CompleteRequest">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <!-- Start Date -->
                        <div class="form-group mb-3">
                            <label asp-for="StartDate" class="form-label fw-bold"></label>
                            <input asp-for="StartDate" type="date" class="form-control form-control-lg" id="StartDate" />
                            <span asp-validation-for="StartDate" class="text-danger"></span>
                        </div>

                        <!-- End Date -->
                        <div class="form-group mb-3">
                            <label asp-for="EndDate" class="form-label fw-bold"></label>
                            <input asp-for="EndDate" type="date" class="form-control form-control-lg" id="EndDate" />
                            <span asp-validation-for="EndDate" class="text-danger"></span>
                        </div>

                        <!-- Delivery Address -->
                        <div class="form-group mb-3">
                            <label asp-for="DeliveryAddress" class="form-label fw-bold"></label>
                            <input asp-for="DeliveryAddress" class="form-control form-control-lg" placeholder="Enter delivery address" />
                            <span asp-validation-for="DeliveryAddress" class="text-danger"></span>
                        </div>

                        <!-- Pickup Address -->
                        <div class="form-group mb-3">
                            <label asp-for="pickupAddress" class="form-label fw-bold"></label>
                            <input asp-for="pickupAddress" class="form-control form-control-lg" placeholder="Enter pickup address" />
                            <span asp-validation-for="pickupAddress" class="text-danger"></span>
                        </div>

                        <!-- With Driver -->
                        <div class="form-group form-check mb-3">
                            <input class="form-check-input" asp-for="WithDriver" id="WithDriver" />
                            <label class="form-check-label" asp-for="WithDriver"></label>
                        </div>

                        <hr class="my-4" />

                        <!-- Total Price Display -->
                        <div class="d-flex justify-content-between align-items-center bg-light p-3 rounded mb-4">
                            <span class="fw-bold fs-5">Total Price:</span>
                            <span id="totalPrice" class="text-success fw-bold fs-5">$0.00</span>
                        </div>

                        <!-- Submit -->
                        <div class="form-group">
                            <input type="submit" value="Continue" class="btn btn-success btn-lg w-100" />
                        </div>

                        <div class="text-center mt-3">
                            <a asp-action="Home" asp-controller="" class="text-decoration-none">Back to Home page</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
			const today = new Date().toISOString().split('T')[0];
            const startDateInput = document.getElementById("StartDate");
            const endDateInput = document.getElementById("EndDate");

            // Set min for start date and end date
            startDateInput.setAttribute("min", today);
            endDateInput.setAttribute("min", today);

            // When StartDate changes, update min of EndDate
            startDateInput.addEventListener("change", function () {
                const startDateValue = startDateInput.value;
                endDateInput.setAttribute("min", startDateValue);

                // Clear end date if it's earlier than start date
                if (endDateInput.value < startDateValue) {
                    endDateInput.value = "";
                }

                calculatePrice();
            });

            // Calculate price when end date changes
            endDateInput.addEventListener("change", function() {
                calculatePrice();
            });

            // With Driver checkbox changes
            document.getElementById("WithDriver").addEventListener("change", function() {
                calculatePrice();
            });

            // Simple price calculation example

            function calculatePrice() {
                const startDate = new Date(startDateInput.value);
                const endDate = new Date(endDateInput.value);


                if (startDateInput.value && endDateInput.value) {
                    // Calculate days difference
                    const diffTime = Math.abs(endDate - startDate);
                    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;

                    // Base price per day
                    let basePrice = 50;


                    // Add driver fee if selected
                    if (document.getElementById("WithDriver").checked) {
                        basePrice += 25;
                    }

                    const totalPrice = basePrice * diffDays;
                    document.getElementById("totalPrice").textContent = "$" + totalPrice.toFixed(2);
                }
            }
        });
    </script>
}