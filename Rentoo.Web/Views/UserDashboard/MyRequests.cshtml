@using Rentoo.Domain.Entities
@model IEnumerable<Rentoo.Domain.Entities.Request>

@{
    Layout = "~/Views/Shared/_EndUserLayout.cshtml";
    ViewData["Title"] = "My Requests";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f2f3f5;
            color: #333;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        .dashboard-sidebar {
            width: 280px;
            background: #1a1a2e;
            color: #fff;
            padding-top: 40px;
        }

        .sidebar-brand {
            text-align: center;
            margin-bottom: 30px;
            padding: 0 20px;
        }

        .sidebar-brand img {
            max-width: 120px;
        }

        .sidebar-item {
            padding: 15px 25px;
            display: flex;
            align-items: center;
            cursor: pointer;
            transition: 0.3s;
            color: #c9c9c9;
            font-weight: 500;
            margin: 5px 15px;
            border-radius: 8px;
            text-decoration: none;
        }

        .sidebar-item i {
            margin-right: 12px;
            width: 20px;
            text-align: center;
        }

        .sidebar-item:hover,
        .sidebar-item.active {
            background: #e91e63;
            color: #fff;
        }

        .dashboard-content {
            flex: 1;
            padding: 40px;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        .page-header h1 {
            font-size: 24px;
            font-weight: 700;
            color: #333;
        }

        .nav-tabs {
            display: flex;
            gap: 15px;
            margin-bottom: 30px;
            flex-wrap: wrap;
            background: #fff;
            padding: 10px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .nav-tab {
            padding: 12px 20px;
            border-radius: 8px;
            text-decoration: none;
            color: #777;
            font-weight: 500;
            transition: 0.3s;
        }

        .nav-tab:hover {
            color: #e91e63;
        }

        .nav-tab.active {
            background-color: #e91e63;
            color: #fff;
        }

        .nav-tab i {
            margin-right: 8px;
        }

        .request-card {
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
            padding: 20px;
            transition: transform 0.3s ease;
        }

        .request-card:hover {
            transform: translateY(-5px);
        }

        .request-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .request-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
        }

        .request-status {
            padding: 6px 12px;
            border-radius: 20px;
            font-weight: 500;
            font-size: 14px;
        }

        .status-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-accepted {
            background-color: #d4edda;
            color: #155724;
        }

        .status-rejected {
            background-color: #f8d7da;
            color: #721c24;
        }

        .status-completed {
            background-color: #cce5ff;
            color: #004085;
        }

        .request-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .detail-item i {
            color: #e91e63;
        }

        .request-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }

        .btn {
            padding: 8px 16px;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
        }

        .btn-primary {
            background-color: #e91e63;
            color: #fff;
        }

        .btn-primary:hover {
            background-color: #d81b60;
        }

        .btn-success {
            background-color: #28a745;
            color: #fff;
        }

        .btn-success:hover {
            background-color: #218838;
        }

        .btn-danger {
            background-color: #dc3545;
            color: #fff;
        }

        .btn-danger:hover {
            background-color: #c82333;
        }

        .btn-info {
            background-color: #17a2b8;
            color: #fff;
        }

        .btn-info:hover {
            background-color: #138496;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
        }

        .modal-content {
            background-color: #fff;
            margin: 15% auto;
            padding: 20px;
            border-radius: 12px;
            width: 80%;
            max-width: 600px;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-title {
            font-size: 20px;
            font-weight: 600;
            color: #333;
        }

        .close {
            font-size: 24px;
            cursor: pointer;
        }

        .modal-body {
            margin-bottom: 20px;
        }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <div class="dashboard-content">
            <div class="page-header">
                <h1>Rental Requests</h1>
            </div>

            <div class="nav-tabs">
                <a href="@Url.Action("UserProfile", "UserDashboard")" class="nav-tab"><i class="fas fa-user"></i> MY ACCOUNT</a>
                <a href="@Url.Action("MyCar", "UserDashboard")" class="nav-tab"><i class="fas fa-car"></i> MY CARS</a>
                <a href="@Url.Action("MyRequests", "UserDashboard")" class="nav-tab active"><i class="fas fa-file-alt"></i> MY REQUESTS</a>
                <a href="@Url.Action("Reviews", "UserDashboard")" class="nav-tab"><i class="fas fa-star"></i> REVIEWS</a>
                <a href="@Url.Action("PricePlans", "UserDashboard")" class="nav-tab"><i class="fas fa-tags"></i> PRICE PLANS</a>
            </div>

            @if (!Model.Any())
            {
                <div class="alert alert-info">
                    You don't have any rental requests yet.
                </div>
            }
            else
            {
                foreach (var request in Model)
                {
                    <div class="request-card">
                        <div class="request-header">
                            <h3 class="request-title">Request for @request.Car.Model</h3>
                            <span class="request-status status-@request.Status.ToString().ToLower()">
                                @request.Status
                            </span>
                        </div>
                        <div class="request-details">
                            <div class="detail-item">
                                <i class="fas fa-user"></i>
                                <span>@request.User.FirstName @request.User.LastName</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-calendar"></i>
                                <span>@request.StartDate - @request.EndDate</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-map-marker-alt"></i>
                                <span>@request.pickupAddress</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-money-bill-wave"></i>
                                <span>@request.TotalPrice EGP</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-car"></i>
                                <span>@(request.WithDriver ? "With Driver" : "Without Driver")</span>
                            </div>
                        </div>
                        <div class="request-actions">
                            <button class="btn btn-info" onclick="viewRequestDetails(@request.ID)">
                                <i class="fas fa-eye"></i> View Details
                            </button>
                            @if (request.Status == RequestStatus.Pending)
                            {
                                <button class="btn btn-success" onclick="updateRequestStatus(@request.ID, 'Accepted')">
                                    <i class="fas fa-check"></i> Accept
                                </button>
                                <button class="btn btn-danger" onclick="updateRequestStatus(@request.ID, 'Rejected')">
                                    <i class="fas fa-times"></i> Reject
                                </button>
                            }
                        </div>
                    </div>
                }
            }
        </div>
    </div>

    <!-- Request Details Modal -->
    <div id="requestDetailsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Request Details</h3>
                <span class="close">&times;</span>
            </div>
            <div class="modal-body" id="requestDetailsContent">
                <!-- Details will be loaded here -->
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            function viewRequestDetails(requestId) {
                // Fetch request details
                fetch(`/UserDashboard/GetRequest/${requestId}`)
                    .then(response => response.json())
                    .then(request => {
                        // Create the details content
                        const detailsContent = `
                            <div class="request-details">
                                <div class="detail-item">
                                    <i class="fas fa-car"></i>
                                    <span><strong>Car:</strong> ${request.car.model}</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-user"></i>
                                    <span><strong>Requester:</strong> ${request.user.firstName} ${request.user.lastName}</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-calendar"></i>
                                    <span><strong>Dates:</strong> ${request.startDate} - ${request.endDate}</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-map-marker-alt"></i>
                                    <span><strong>Pickup Location:</strong> ${request.pickupAddress}</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-money-bill-wave"></i>
                                    <span><strong>Total Price:</strong> ${request.totalPrice} EGP</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-car"></i>
                                    <span><strong>Driver Option:</strong> ${request.withDriver ? 'With Driver' : 'Without Driver'}</span>
                                </div>
                                <div class="detail-item">
                                    <i class="fas fa-info-circle"></i>
                                    <span><strong>Status:</strong> ${request.status}</span>
                                </div>
                                ${request.additionalNotes ? `
                                    <div class="detail-item">
                                        <i class="fas fa-sticky-note"></i>
                                        <span><strong>Additional Notes:</strong> ${request.additionalNotes}</span>
                                    </div>
                                ` : ''}
                            </div>
                        `;

                        // Update modal content and show it
                        document.getElementById('requestDetailsContent').innerHTML = detailsContent;
                        document.getElementById('requestDetailsModal').style.display = "block";
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while loading request details.');
                    });
            }

            function updateRequestStatus(requestId, status) {
                if (confirm(`Are you sure you want to ${status.toLowerCase()} this request?`)) {
                    fetch('/UserDashboard/UpdateRequestStatus', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            requestId: requestId,
                            status: status
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('Error updating request status: ' + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while updating the request status.');
                    });
                }
            }

            // Modal functionality
            const modal = document.getElementById('requestDetailsModal');
            const closeBtn = document.getElementsByClassName('close')[0];

            closeBtn.onclick = function() {
                modal.style.display = "none";
            }

            window.onclick = function(event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }
        </script>
    }
</body>
</html> 