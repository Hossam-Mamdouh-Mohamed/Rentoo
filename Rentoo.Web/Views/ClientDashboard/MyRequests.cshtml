@using Rentoo.Domain.Entities
@model IEnumerable<Rentoo.Domain.Entities.Request>

@{
    Layout = "~/Views/Shared/_EndUserLayout.cshtml";
    ViewData["Title"] = "My Requests";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f2f3f5;
            color: #333;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        .dashboard-sidebar {
            width: 280px;
            background: #1a1a2e;
            color: #fff;
            padding-top: 40px;
        }

        .sidebar-brand {
            text-align: center;
            margin-bottom: 30px;
            padding: 0 20px;
        }

            .sidebar-brand img {
                max-width: 120px;
            }

        .sidebar-item {
            padding: 15px 25px;
            display: flex;
            align-items: center;
            cursor: pointer;
            transition: 0.3s;
            color: #c9c9c9;
            font-weight: 500;
            margin: 5px 15px;
            border-radius: 8px;
            text-decoration: none;
        }

            .sidebar-item i {
                margin-right: 12px;
                width: 20px;
                text-align: center;
            }

            .sidebar-item:hover,
            .sidebar-item.active {
                background: #e91e63;
                color: #fff;
            }

        .dashboard-content {
            flex: 1;
            padding: 40px;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

            .page-header h1 {
                font-size: 24px;
                font-weight: 700;
                color: #333;
            }

        .nav-tabs {
            display: flex;
            gap: 15px;
            margin-bottom: 30px;
            flex-wrap: wrap;
            background: #fff;
            padding: 10px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .nav-tab {
            padding: 12px 20px;
            border-radius: 8px;
            text-decoration: none;
            color: #777;
            font-weight: 500;
            transition: 0.3s;
        }

            .nav-tab:hover {
                color: #e91e63;
            }

            .nav-tab.active {
                background-color: #e91e63;
                color: #fff;
            }

            .nav-tab i {
                margin-right: 8px;
            }

        .request-card {
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
            padding: 20px;
            transition: transform 0.3s ease;
        }

            .request-card:hover {
                transform: translateY(-5px);
            }

        .request-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .request-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
        }

        .request-status {
            padding: 6px 12px;
            border-radius: 20px;
            font-weight: 500;
            font-size: 14px;
        }

        .status-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-accepted {
            background-color: #d4edda;
            color: #155724;
        }

        .status-rejected {
            background-color: #f8d7da;
            color: #721c24;
        }

        .status-completed {
            background-color: #cce5ff;
            color: #004085;
        }

        .request-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .detail-item i {
                color: #e91e63;
            }

        .request-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }

        .btn {
            padding: 8px 16px;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
        }

        .btn-primary {
            background-color: #e91e63;
            color: #fff;
        }

            .btn-primary:hover {
                background-color: #d81b60;
            }

        .btn-success {
            background-color: #28a745;
            color: #fff;
        }

            .btn-success:hover {
                background-color: #218838;
            }

        .btn-danger {
            background-color: #dc3545;
            color: #fff;
        }

            .btn-danger:hover {
                background-color: #c82333;
            }

        .btn-info {
            background-color: #17a2b8;
            color: #fff;
        }

            .btn-info:hover {
                background-color: #138496;
            }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: #fff;
            padding: 30px;
            border-radius: 12px;
            width: 90%;
            max-width: 500px;
            position: relative;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
            opacity: 0;
            transform: translateY(-20px);
            transition: opacity 0.3s ease-out, transform 0.3s ease-out;
        }

        .modal.show .modal-content {
            opacity: 1;
            transform: translateY(0);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .modal-title {
            font-size: 24px;
            font-weight: 600;
            color: #333;
            margin: 0;
        }

        .close-button {
            position: absolute;
            top: 15px;
            right: 15px;
            background: none;
            border: none;
            font-size: 24px;
            color: #666;
            cursor: pointer;
            padding: 5px;
            transition: color 0.3s ease;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

        .close-button:hover {
            color: #333;
            background-color: #f5f5f5;
        }

        .modal-body {
            margin-bottom: 25px;
        }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            padding-top: 20px;
            border-top: 1px solid #eee;
        }
        
        .rating-stars {
            display: flex;
            gap: 5px;
            margin-bottom: 15px;
        }
        
        .star {
            font-size: 24px;
            cursor: pointer;
            color: #ddd;
        }
        
        .star.active {
            color: #ffc107;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }
        
        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
        }
        
        textarea.form-control {
            min-height: 100px;
            resize: vertical;
        }
        
        .alert {
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <div class="dashboard-content">
            <div class="page-header">
                <h1>Rental Requests</h1>
            </div>

            <div class="nav-tabs">
                <a href="@Url.Action("ClientProfile", "ClientDashboard")" class="nav-tab "><i class="fas fa-user"></i> MY ACCOUNT</a>
                <a href="@Url.Action("MyRequests", "ClientDashboard")" class="nav-tab active"><i class="fas fa-file-alt"></i> MY REQUESTS</a>
                <a href="@Url.Action("YourDoucoment", "ClientDashboard")" class="nav-tab"><i class="fas fa-file-upload"></i> YOUR DOCUMENTS</a>
            </div>
            
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }
            
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["ErrorMessage"]
                </div>
            }

            @if (!Model.Any())
            {
                <div class="alert alert-info">
                    You don't have any rental requests yet.
                </div>
            }
            else
            {
                foreach (var request in Model)
                {
                    <div class="request-card">
                        <div class="request-header">
                            <h3 class="request-title">Request for @request.Car.Model</h3>
                            <span class="request-status status-@request.Status.ToString().ToLower()">
                                @request.Status
                            </span>
                        </div>
                        <div class="request-details">
                            <div class="detail-item">
                                <i class="fas fa-user"></i>
                                <span>@request.User.FirstName @request.User.LastName</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-calendar"></i>
                                <span>@request.StartDate - @request.EndDate</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-map-marker-alt"></i>
                                <span>@request.pickupAddress</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-money-bill-wave"></i>
                                <span>@request.TotalPrice EGP</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-car"></i>
                                <span>@(request.WithDriver ? "With Driver" : "Without Driver")</span>
                            </div>
                        </div>
                        
                        @if (request.Status == RequestStatus.Completed)
                        {
                            // Check if a review already exists for this request
                            var reviewedRequestIds = ViewBag.ReviewedRequestIds as HashSet<int>;
                            if (reviewedRequestIds == null || !reviewedRequestIds.Contains(request.ID))
                            {
                                <div class="request-actions">
                                    <button class="btn btn-info" onclick="openReviewModal(@request.ID)">
                                        <i class="fas fa-star"></i> Add Review
                                    </button>
                                </div>
                            }
                            else
                            {
                                <div class="request-actions">
                                    <div class="alert alert-info">
                                        <i class="fas fa-check-circle"></i> You have already reviewed this request.
                                    </div>
                                </div>
                            }
                        }
                    </div>
                }
            }
        </div>
    </div>
    
    <!-- Review Modal -->
    <div id="reviewModal" class="modal">
        <div class="modal-content">
            <button class="close-button" onclick="closeReviewModal()" aria-label="Close">
                <i class="fas fa-times"></i>
            </button>
            <div class="modal-header">
                <h3 class="modal-title">Add Review</h3>
            </div>
            <div class="modal-body">
                <form id="reviewForm" asp-action="AddReview" method="post" onsubmit="return validateReviewForm()">
                    <input type="hidden" id="requestId" name="requestId" />
                    
                    <div class="form-group">
                        <label>Rating</label>
                        <div class="rating-stars">
                            <i class="fas fa-star star" data-rating="1"></i>
                            <i class="fas fa-star star" data-rating="2"></i>
                            <i class="fas fa-star star" data-rating="3"></i>
                            <i class="fas fa-star star" data-rating="4"></i>
                            <i class="fas fa-star star" data-rating="5"></i>
                        </div>
                        <input type="hidden" id="rating" name="rating" value="5" />
                        <span id="ratingError" class="text-danger" style="display: none; color: #dc3545; font-size: 14px;">Please select a rating</span>
                    </div>
                    
                    <div class="form-group">
                        <label for="comment">Comment</label>
                        <textarea id="comment" name="comment" class="form-control" placeholder="Share your experience with this rental..."></textarea>
                        <span id="commentError" class="text-danger" style="display: none; color: #dc3545; font-size: 14px;">Please provide a comment</span>
                    </div>
                    
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" onclick="closeReviewModal()">Cancel</button>
                        <button type="submit" class="btn btn-success">Submit Review</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <script>
        // Get the modal
        var modal = document.getElementById("reviewModal");
        
        // Function to open the review modal
        function openReviewModal(requestId) {
            document.getElementById("requestId").value = requestId;
            modal.style.display = "flex";
            // Add a small delay to allow the display change to take effect
            setTimeout(() => {
                modal.classList.add("show");
            }, 10);
            
            // Reset the form
            document.getElementById("rating").value = "5";
            document.getElementById("comment").value = "";
            
            // Reset error messages
            document.getElementById("ratingError").style.display = "none";
            document.getElementById("commentError").style.display = "none";
            
            // Reset stars
            var stars = document.querySelectorAll(".star");
            stars.forEach(function(star) {
                star.classList.remove("active");
            });
            
            // Set all stars as active (default 5 stars)
            for (var i = 0; i < 5; i++) {
                stars[i].classList.add("active");
            }
        }
        
        // Function to close the review modal
        function closeReviewModal() {
            modal.classList.remove("show");
            // Wait for the transition to complete before hiding the modal
            setTimeout(() => {
                modal.style.display = "none";
            }, 300);
        }
        
        // Close the modal when clicking outside of it
        window.onclick = function(event) {
            if (event.target == modal) {
                closeReviewModal();
            }
        }
        
        // Handle star rating
        var stars = document.querySelectorAll(".star");
        stars.forEach(function(star) {
            star.addEventListener("click", function() {
                var rating = this.getAttribute("data-rating");
                document.getElementById("rating").value = rating;
                
                // Update star display
                stars.forEach(function(s) {
                    s.classList.remove("active");
                });
                
                for (var i = 0; i < rating; i++) {
                    stars[i].classList.add("active");
                }
            });
        });
        
        // Form validation function
        function validateReviewForm() {
            var isValid = true;
            var rating = document.getElementById("rating").value;
            var comment = document.getElementById("comment").value.trim();
            
            // Validate rating
            if (!rating || rating < 1 || rating > 5) {
                document.getElementById("ratingError").style.display = "block";
                isValid = false;
            } else {
                document.getElementById("ratingError").style.display = "none";
            }
            
            // Validate comment
            if (!comment) {
                document.getElementById("commentError").style.display = "block";
                isValid = false;
            } else {
                document.getElementById("commentError").style.display = "none";
            }
            
            return isValid;
        }
    </script>
</body>
</html>
